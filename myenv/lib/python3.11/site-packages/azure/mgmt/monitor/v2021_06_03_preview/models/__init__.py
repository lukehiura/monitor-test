# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from ._models_py3 import (AzureMonitorWorkspace,
                          AzureMonitorWorkspaceDefaultIngestionSettings,
                          AzureMonitorWorkspaceMetrics,
                          AzureMonitorWorkspaceResource,
                          AzureMonitorWorkspaceResourceForUpdate,
                          AzureMonitorWorkspaceResourceListResult,
                          AzureMonitorWorkspaceResourceProperties,
                          ErrorAdditionalInfo, ErrorDetail, ErrorResponse,
                          IngestionSettings, Metrics, Operation,
                          OperationDisplay, OperationListResult, Resource,
                          SystemData, TrackedResource)
from ._monitor_management_client_enums import (ActionType, CreatedByType,
                                               Origin, ProvisioningState)
from ._patch import *  # pylint: disable=unused-wildcard-import
from ._patch import __all__ as _patch_all
from ._patch import patch_sdk as _patch_sdk

__all__ = [
    "AzureMonitorWorkspace",
    "AzureMonitorWorkspaceDefaultIngestionSettings",
    "AzureMonitorWorkspaceMetrics",
    "AzureMonitorWorkspaceResource",
    "AzureMonitorWorkspaceResourceForUpdate",
    "AzureMonitorWorkspaceResourceListResult",
    "AzureMonitorWorkspaceResourceProperties",
    "ErrorAdditionalInfo",
    "ErrorDetail",
    "ErrorResponse",
    "IngestionSettings",
    "Metrics",
    "Operation",
    "OperationDisplay",
    "OperationListResult",
    "Resource",
    "SystemData",
    "TrackedResource",
    "ActionType",
    "CreatedByType",
    "Origin",
    "ProvisioningState",
]
__all__.extend([p for p in _patch_all if p not in __all__])
_patch_sdk()
